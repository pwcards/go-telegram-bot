package handler

import (
	"fmt"
	"log" //nolint:goimports

	telegramApi "github.com/go-telegram-bot-api/telegram-bot-api"
	"github.com/pkg/errors"
	"github.com/pwcards/go-telegram-bot/internal/config"
)

func initBot(token string) (*telegramApi.BotAPI, error) {
	return telegramApi.NewBotAPI(token)
}

func MessageHandler(cfg *config.Config) error {
	// –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
	bot, err := initBot(cfg.Telegram.Token)
	if err != nil {
		log.Panic(err)
	}

	valute, err := GetRemoteDataValute()
	if err != nil {
		return errors.Wrap(err, "get valute remote source")
	}

	// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—à–µ–ª –≤ bot.
	log.Printf("Authorized on account %s", bot.Self.UserName)

	// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –∫–æ–Ω—Ñ–∏–≥–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–ø–¥–µ–π—Ç–æ–≤
	u := telegramApi.NewUpdate(0)
	u.Timeout = 60

	// –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–Ω—Ñ–∏–≥ u —Å–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –ø—Ä–∏–ª–µ—Ç–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
	updates, _ := bot.GetUpdatesChan(u)

	// –í –∫–∞–Ω–∞–ª updates –ø—Ä–∏—Ö–æ–¥—è—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∏–ø–∞ Update
	// –≤—ã—á–∏—Ç—ã–≤–∞–µ–º –∏—Ö –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
	for update := range updates {
		if update.Message == nil { // ignore non-Message updates
			continue
		}

		// –õ–æ–≥ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø–∏—Å–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
		log.Printf("[%s] %s", update.Message.From.UserName, update.Message.Text)

		msg := telegramApi.NewMessage(update.Message.Chat.ID, update.Message.Text)

		if update.Message.IsCommand() {
			// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥.
			// –ö–æ–º–∞–Ω–¥–∞ - —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞—á–∏–Ω–∞—é—â–µ–µ—Å—è —Å "/"
			switch update.Message.Command() {
			case "start":
				msg.Text = "–ü—Ä–∏–≤–µ—Ç! ü§ó\n –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç —Ç–≤–æ—é –∑–∞—Ä–ø–ª–∞—Ç—É –ø–æ –Ω–æ–≤–æ–º—É –∫—É—Ä—Å—É üí∞üí∞üí∞. \n –£–∫–∞–∂–∏ —Å–≤–æ—é —Ç–µ–∫—É—â—É—é –∑–∞—Ä–ø–ª–∞—Ç—É –≤ —Ä—É–±–ª—è—Ö."
			}
		} else {
			switch update.Message.Text {
			case "open":
				msg.ReplyMarkup = valuteKeyboard
			case "close":
				msg.ReplyMarkup = telegramApi.NewRemoveKeyboard(true)

			case CommandUSD:
				msg.Text = fmt.Sprintf("–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞: %f —Ä—É–±.", valute.Valute.Usd.Value)
			case CommandEUR:
				msg.Text = fmt.Sprintf("–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –µ–≤—Ä–æ: %f —Ä—É–±.", valute.Valute.Eur.Value)
			case CommandGBP:
				msg.Text = fmt.Sprintf("–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å —Ñ—É–Ω—Ç–∞ —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤ –°–æ–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞: %f —Ä—É–±.", valute.Valute.Gbp.Value)
			}
		}

		// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
		if _, err := bot.Send(msg); err != nil {
			log.Panic(err)
		}
	}

	return nil
}
